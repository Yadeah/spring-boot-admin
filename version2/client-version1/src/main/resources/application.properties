server.port=8021
spring.application.name=version1
#client工程名字，默认spring.application.name的值，若没有配置，则为spring-boot-application
#spring.boot.admin.client.name=version2
spring.boot.admin.api-path=instances

#server
spring.boot.admin.url=http://localhost:8020

#endpoints
endpoints.shutdown.enabled=true

#security
spring.boot.admin.username=admin
spring.boot.admin.password=admin
spring.boot.admin.client.metadata.user.name=admin
spring.boot.admin.client.metadata.user.password=admin
management.security.enabled=false

#Logfile
logging.file=logs/version2/client-version1/log.log
logging.pattern.file=%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(${PID}){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wEx

#是否使用注册的ip地址来取代hostname，默认false，即都是用本身的hostname，如果设置了server.address或者management.address的话，ip就是该值，如果没有的话ip就是InetAddress.getLocalHost()
#spring.boot.admin.client.instance.prefer-ip=false
#admin是否启用该客户端 默认true
#spring.boot.admin.client.enabled=false
#???没有用
#spring.boot.admin.client.api-path=my
#注册间隔时间(ms) 默认10*1000ms=10s client通过持续不断地向server端进行注册来保持client端与server端的连接
#spring.boot.admin.client.period=30000
#注册连接超时时间，单位是毫秒，默认值是5秒。当client向server进行注册时，如果5秒钟没有注册完成则认为本次注册失败；
#spring.boot.admin.client.connect-timeout=10
#注册读取超时 默认5s
#spring.boot.admin.client.read-timeout=0
#是否开启自动注册 默认true
#spring.boot.admin.client.auto-registration=false
#是否开启自动注销，默认值是null。如果服务端运行在云平台，默认值是true；
#spring.boot.admin.client.auto-deregistration=true ？？？
#true表示每次只注册一个server，按照url的顺序，server宕机后注册下一个，false表示所有server注册，默认true
#配置service-url基本url，默认http://{hostname}:{server.port}
#spring.boot.admin.client.instance.service-base-url=http://localhost:8084
#server根据service-url获取client的各种信息，默认{service-base-url}{server,context-path},server和client不在同一台服务器时，要配置该属性
#spring.boot.admin.client.instance.service-url=
#配置management-url基本url，默认http://{service-url(serveci-url没有配置时则为server.servlet-path（项目的启动路径))}{management.port配置的获取actuator信息的端口}
#spring.boot.admin.client.instance.management-base-url=
#注册的management-url，默认{management-base-url}{management,context-path这是spring actuator的属性值}
#spring.boot.admin.client.instance.management-url=
#注册的health-url地址，默认{management-url}{endpoints.health.id}
#spring.boot.admin.client.instance.health-url=

#与该应用有关的元数据，以键值对的形式赋值
#spring.boot.admin.client.instance.metadata.
#spring.boot.admin.client.instance.metadata.tags.
#spring.boot.admin.client.instance.metadata.environment=test

#排除对配置信息的监控，监控这个信息可能会导致数据库连接释放不掉，最后超时
#management.endpoints.web.exposure.exclude=configprops

#利用info端点，加入版本等信息
#info.version=@project.version@
#info.name=@project.name@
#info.artifact=@project.artifactId@
#info.group=@project.groupId@
#using the info endpoint
#info.tags.environment=test